name: Building and Deploying Tomo & Akemi

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  tests:
    defaults:
      run:
        working-directory: tomo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Run tests with --node flag
        run: wasm-pack test --node
  
  tomo:
    defaults:
      run:
        working-directory: tomo
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
            ${{ runner.os }}-cargo

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build as release candidate
        run: wasm-pack build --release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tomo
          if-no-files-found: error
          path: tomo/pkg

  akemi:
    defaults:
      run:
        working-directory: akemi
    runs-on: ubuntu-latest
    needs: tomo
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Download Tomo build artifacts
        uses: actions/download-artifact@v3
        with:
          name: tomo
          path: tomo/pkg

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
